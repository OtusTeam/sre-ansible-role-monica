---
- name: install packages
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - git
    - apt-transport-https
    - nginx

- name: check out master branch
  git:
    repo: 'https://github.com/monicahq/monica'
    dest: /srv/monicahq
    version: master

- name: Add the user
  user:
    name: monicahq
    shell: /usr/bin/nologin
    home: /srv/monicahq

- name: Import Remi GPG key.
  rpm_key: "key={{ item }} state=present"
  with_items:
    - "http://rpms.famillecollet.com/RPM-GPG-KEY-remi"

- name: Install Remi repo.
  command: "rpm -Uvh --force {{ item.href }} creates={{ item.creates }}"
  with_items:
    - href: "http://rpms.famillecollet.com/enterprise/remi-release-8.rpm"
      creates: "/etc/yum.repos.d/remi.repo"

- name: Install EPEL repo.
  yum: name=epel-release state=present

- name: Ensure firewalld is stopped (since this is a test server).
  service: name=firewalld state=stopped

- name: Install Node.js and npm.
  yum: name=npm state=present enablerepo=epel

- name: Install Forever (to run our Node.js app).
  npm: name=forever global=yes state=latest

- name: Install a modularity appstream with defined stream and profile
  ansible.builtin.dnf:
    name: '@php:remi-7.3'
    state: present

- name: install php dependencies
  dnf:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - php
    - php-cli
    - php-intl
    - php-iconv
    - php-fpm
    - php-curl
    - php-gd
    - php-mysql
    - php-mysqli
    - php-opcache
    - php-json
    - php-mbstring
    - php-soap
    - php-xml
    - php-zip
    - php-gmp
    - php-bcmath
    - php-memcached
    - php-xdebug
    - php-redis

- name: reload service php-fcgi
  become: true
  systemd:
    name: php-fpm
    state: reloaded

- name: install composer
  include_role:
    name: geerlingguy.composer

- name: install composer dependencies
  composer:
    command: install
    working_dir: /srv/monicahq
- name: prepare configuration
  template:
    src: env.j2
    dest: /srv/monicahq/.env

- name: Run an initial key generation
  command: "/usr/bin/php /srv/monicahq/artisan key:generate"
  args:
    chdir: /srv/monicahq/
  tags: molecule-notest

- name: Run an initial migration
  command: "/usr/bin/php /srv/monicahq/artisan setup:production --force"
  args:
    chdir: /srv/monicahq/
  tags: molecule-notest

- name: Place a scheduler cron job
  cron:
    user: monicahq
    name: "scheduler"
    job: "/usr/bin/php /srv/monicahq/artisan schedule:run"

- name: Recursively change ownership of a directory
  file:
    path: /srv/monicahq
    state: directory
    recurse: yes
    owner: monicahq
    group: www-data

- name: Put right permissions to storage
  file:
    path: /srv/monicahq/storage
    state: directory
    recurse: yes
    mode: g+w
- name: Create nginx vhost config
  template:
    src: monicahq.conf.j2
    dest: /etc/nginx/sites-enabled/monica.conf
- name: Remove default nginx configuration
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
- name: reload service nginx
  become: true
  systemd:
    name: nginx
    state: reloaded
